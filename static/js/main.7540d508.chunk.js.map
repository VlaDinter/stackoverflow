{"version":3,"sources":["components/Search/Search.js","components/Filters/Filters.js","components/Header/Header.js","components/Question/Question.js","components/QuestionsList/QuestionsList.js","components/Error/Error.js","components/LoadButton/LoadButton.js","api.js","reducer.js","App.js","index.js"],"names":["Search","isLoading","changeTags","useState","inputValue","setInputValue","onChangeValue","useCallback","evt","target","value","htmlFor","className","type","placeholder","id","disabled","onChange","onKeyPress","key","trim","split","Filters","searchParams","changeFilters","filters","order","setOrder","sort","setSort","fromDate","setFromDate","toDate","setToDate","onOrderChange","onSortChange","onFromDateChange","onToDateChange","data-dismiss","onClick","preventDefault","Header","data-toggle","data-target","Question","question","href","link","rel","title","QuestionsList","questions","map","question_id","Error","LoadButton","changeSize","getQuestions","size","tags","parseDate","date","Date","parse","fetch","join","then","response","json","undefined","error_id","items","initialState","isError","store","createStore","state","action","applyMiddleware","thunk","connect","dispatch","loadQuestions","loadSuccess","catch","props","useEffect","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7540d508.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react';\r\n\r\nconst Search = ({ isLoading, changeTags }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const onChangeValue = useCallback((evt) => {\r\n        setInputValue(evt.target.value);\r\n    }, []);\r\n\r\n    const onEnterPress = (evt) => {\r\n        if (evt.key === 'Enter') {\r\n            changeTags(inputValue.trim().split(' '));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <label htmlFor=\"search\">\r\n            Search by tags:\r\n            <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                placeholder=\"html css javascript\"\r\n                id=\"search\"\r\n                disabled={isLoading}\r\n                value={inputValue}\r\n                onChange={onChangeValue}\r\n                onKeyPress={onEnterPress}\r\n            />\r\n        </label>\r\n    );\r\n};\r\n\r\nexport default Search;","import React, { useState, useCallback } from 'react';\r\n\r\nconst Filters = ({ searchParams, changeFilters }) => {\r\n    const [order, setOrder] = useState(searchParams.filters.order);\r\n    const [sort, setSort] = useState(searchParams.filters.sort);\r\n    const [fromDate, setFromDate] = useState(searchParams.filters.fromDate);\r\n    const [toDate, setToDate] = useState(searchParams.filters.toDate);\r\n\r\n    const onOrderChange = useCallback((evt) => {\r\n        setOrder(evt.target.value);\r\n    }, []);\r\n\r\n    const onSortChange = useCallback((evt) => {\r\n        setSort(evt.target.value);\r\n    }, []);\r\n\r\n    const onFromDateChange = useCallback((evt) => {\r\n        setFromDate(evt.target.value);\r\n    }, []);\r\n\r\n    const onToDateChange = useCallback((evt) => {\r\n        setToDate(evt.target.value);\r\n    }, []);\r\n\r\n    const onSaveClick = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        changeFilters({\r\n            order,\r\n            sort,\r\n            fromDate,\r\n            toDate,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <section className=\"modal fade\" id=\"myModal\">\r\n            <div className=\"modal-dialog\">\r\n                <form className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title\">Filters</h2>\r\n                        <button\r\n                            className=\"close\"\r\n                            data-dismiss=\"modal\"\r\n                            type=\"button\"\r\n                        >\r\n                            &times;\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"row modal-body\">\r\n                        <div className=\"col\">\r\n                            <label>\r\n                                From date:\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    value={fromDate}\r\n                                    onChange={onFromDateChange}\r\n                                />\r\n                            </label>\r\n\r\n                            <select\r\n                                className=\"mt-3 custom-select\"\r\n                                value={order}\r\n                                onChange={onOrderChange}\r\n                            >\r\n                                <option value=\"desc\">desc</option>\r\n                                <option value=\"asc\">asc</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"col\">\r\n                            <label>\r\n                                To date:\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    value={toDate}\r\n                                    onChange={onToDateChange}\r\n                                />\r\n                            </label>\r\n\r\n                            <select\r\n                                className=\"mt-3 custom-select\"\r\n                                value={sort}\r\n                                onChange={onSortChange}\r\n                            >\r\n                                <option value=\"activity\">activity</option>\r\n                                <option value=\"votes\">votes</option>\r\n                                <option value=\"creation\">creation</option>\r\n                                <option value=\"hot\">hot</option>\r\n                                <option value=\"week\">week</option>\r\n                                <option value=\"month\">month</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"modal-footer\">\r\n                        <button\r\n                            className=\"btn btn-outline-warning\"\r\n                            type=\"submit\"\r\n                            data-dismiss=\"modal\"\r\n                            onClick={onSaveClick}\r\n                        >\r\n                            Search\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Filters;","import React from 'react';\r\n\r\nimport Search from '../Search/Search';\r\nimport Filters from '../Filters/Filters';\r\n\r\nconst Header = ({ searchParams, isLoading, changeTags, changeFilters }) => (\r\n    <header className=\"d-flex justify-content-around bg-dark text-warning\">\r\n        <Search isLoading={isLoading} changeTags={changeTags} />\r\n        <button\r\n            className=\"btn btn-outline-warning my-3\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#myModal\"\r\n            type=\"button\"\r\n            disabled={isLoading}\r\n        >\r\n            Filters\r\n        </button>\r\n        <Filters searchParams={searchParams} changeFilters={changeFilters} />\r\n    </header>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Question = ({ question }) => (\r\n    <li>\r\n        <a\r\n            className=\"list-group-item list-group-item-action list-group-item-warning\"\r\n            href={question.link}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n        >\r\n            {question.title}\r\n        </a>\r\n    </li>\r\n);\r\n\r\nexport default Question;","import React from 'react';\r\n\r\nimport Question from '../Question/Question';\r\n\r\nconst QuestionsList = ({ questions }) => (\r\n    <ul className=\"list-group\">\r\n        {questions.map(question => (\r\n            <Question key={question.question_id} question={question} />\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nexport default QuestionsList;","import React from 'react';\r\n\r\nconst Error = () => (\r\n    <p  className=\"font-weight-bold text-danger\">\r\n        Please refresh the page or try again later\r\n    </p>\r\n);\r\n\r\nexport default Error;","import React from 'react';\r\n\r\nconst LoadButton = ({ isLoading, changeSize }) => (\r\n    <button\r\n        className=\"my-3 btn btn-outline-warning\"\r\n        type=\"button\"\r\n        disabled={isLoading}\r\n        onClick={changeSize}\r\n    >\r\n        {isLoading && <span className=\"spinner-border spinner-border-sm\"></span>}\r\n        {isLoading ? 'Loading...' : 'Load More'}\r\n    </button>\r\n);\r\n\r\nexport default LoadButton;","const getQuestions = ({ size, tags, filters }) => {\r\n    const parseDate = (date) => {\r\n        return date === '' ? '' : Date.parse(date) / 1000;\r\n    };\r\n\r\n    return fetch(`https://api.stackexchange.com/2.2/questions?pagesize=${size}&fromdate=${parseDate(filters.fromDate)}&todate=${parseDate(filters.toDate)}&order=${filters.order}&sort=${filters.sort}&tagged=${tags.join(';')}&site=stackoverflow`)\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if (response.error_id !== undefined) {\r\n                throw new Error();\r\n            }\r\n\r\n            return response.items;\r\n        });\r\n};\r\n\r\nexport default getQuestions;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport getQuestions from './api';\r\n\r\nconst initialState = {\r\n    questions: [],\r\n    searchParams: {\r\n        size: 20,\r\n        tags: [],\r\n        filters: {\r\n            fromDate: '',\r\n            toDate: '',\r\n            order: 'desc',\r\n            sort: 'activity',\r\n        },\r\n    },\r\n    isLoading: true,\r\n    isError: false,\r\n};\r\n\r\nconst START_LOADING = 'START_LOADING';\r\nconst LOAD_SUCCESS = 'LOAD_SUCCESS';\r\nconst LOAD_ERROR = 'LOAD_ERROR';\r\nconst CHANGE_SIZE = 'CHANGE_SIZE';\r\nconst CHANGE_TAGS = 'CHANGE_TAGS';\r\nconst CHANGE_FILTERS = 'CHANGE_FILTERS';\r\n\r\nconst startLoading = () => ({ type: START_LOADING });\r\nconst loadError = () => ({ type: LOAD_ERROR });\r\nconst changeSize = () => ({ type: CHANGE_SIZE });\r\n\r\nconst loadSuccess = (questions) => ({\r\n    type: LOAD_SUCCESS,\r\n    value: questions,\r\n});\r\n\r\nconst changeTags = (tags) => ({\r\n    type: CHANGE_TAGS,\r\n    value: tags,\r\n});\r\n\r\nconst changeFilters = (filters) => ({\r\n    type: CHANGE_FILTERS,\r\n    value: filters,\r\n});\r\n\r\nconst loadQuestions = (searchParams) => {\r\n    return (dispatch) => {\r\n        dispatch(startLoading());\r\n\r\n        return getQuestions(searchParams)\r\n            .then(questions => dispatch(loadSuccess(questions)))\r\n            .catch(() => dispatch(loadError()));\r\n    };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case START_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                isError: false,\r\n            };\r\n\r\n        case LOAD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                questions: action.value,\r\n                isLoading: false,\r\n            };\r\n\r\n        case LOAD_ERROR:\r\n            return {\r\n                ...state,\r\n                isError: true,\r\n                isLoading: false,\r\n            };\r\n\r\n        case CHANGE_SIZE:\r\n            return {\r\n                ...state,\r\n                searchParams: {\r\n                    ...state.searchParams,\r\n                    size: state.searchParams.size + 20,\r\n                },\r\n            };\r\n\r\n        case CHANGE_TAGS:\r\n            return {\r\n                ...state,\r\n                searchParams: {\r\n                    ...state.searchParams,\r\n                    size: 20,\r\n                    tags: action.value,\r\n                },\r\n            };\r\n\r\n        case CHANGE_FILTERS:\r\n            return {\r\n                ...state,\r\n                searchParams: {\r\n                    ...state.searchParams,\r\n                    size: 20,\r\n                    filters: action.value,\r\n                },\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    applyMiddleware(thunk)\r\n);\r\n\r\nexport {\r\n    store,\r\n    changeSize,\r\n    changeTags,\r\n    changeFilters,\r\n    loadQuestions,\r\n};","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport Header from './components/Header/Header';\nimport QuestionsList from './components/QuestionsList/QuestionsList';\nimport Error from './components/Error/Error';\nimport LoadButton from './components/LoadButton/LoadButton';\nimport { changeSize, changeTags, changeFilters, loadQuestions } from './reducer';\n\nconst App = (props) => {\n    const {\n        questions,\n        searchParams,\n        isLoading,\n        isError,\n        changeSize,\n        changeTags,\n        changeFilters,\n        loadQuestions\n    } = props;\n\n    useEffect(() => {\n        loadQuestions(searchParams);\n    }, [searchParams]);\n\n    if (isError) {\n        return <Error />;\n    }\n\n    return (\n        <>\n            <Header\n                searchParams={searchParams}\n                isLoading={isLoading}\n                changeTags={changeTags}\n                changeFilters={changeFilters}\n            />\n            {\n                questions.length === 0\n                    ? <p className=\"mt-3\">Don't have questions :(</p>\n                    : <QuestionsList questions={questions} />\n            }\n            <LoadButton isLoading={isLoading} changeSize={changeSize} />\n        </>\n    );\n};\n\nconst mapStateToProps = state => ({\n    questions: state.questions,\n    searchParams: state.searchParams,\n    isLoading: state.isLoading,\n    isError: state.isError,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    changeSize: () => dispatch(changeSize()),\n    changeTags: (tags) => dispatch(changeTags(tags)),\n    changeFilters: (filters) => dispatch(changeFilters(filters)),\n    loadQuestions: (searchParams) => dispatch(loadQuestions(searchParams)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport { store } from './reducer';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}